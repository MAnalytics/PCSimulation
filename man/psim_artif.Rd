% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/psim_artif.R
\name{psim_artif}
\alias{psim_artif}
\title{Stpp from synthetic origins}
\usage{
psim_artif(n_events=1000, start_date = "yyyy-mm-dd",
poly, n_origin, restriction_feat, field,
n_foci, foci_separation, conc_type = "dispersed",
p_ratio, s_threshold = 50, step_length = 20,
trend = "stable", first_pDate=NULL,
slope = NULL, ..., show.plot=FALSE, show.data=FALSE)
}
\arguments{
\item{n_events}{number of points
(events) to simulate. Default: \code{1000}.
A vector of integer values can be supplied, such as,
c(\code{a}1, \code{a}2, ....)\verb{, where }a\verb{1, }a`2, ...
represent different integer values.}

\item{start_date}{the start date of the temporal pattern.
The date should be in the format \code{"yyyy-mm-dd"}.
The GTP will normally cover a 1-year period.}

\item{poly}{(An sf or S4 object)
a polygon shapefile defining the extent of the landscape}

\item{n_origin}{number of locations to serve as
origins for walkers. Default:\code{50}.}

\item{restriction_feat}{(An S4 object) optional
shapefile containing features
in which walkers cannot walk through.
Default: \code{NULL}.}

\item{field}{a number in the range of \code{[0-1]}
(i.e. restriction values) assigned
to all features; or
the name of a numeric field to extract such
restriction values for different classes of
feature.
Restriction value \code{0} and \code{1} indicate the
lowest and the highest obstructions, respectively.
Default: \code{NULL}.}

\item{n_foci}{number of focal points amongst the origin
locations. The origins to serve as focal
points are based on random selection. \code{n_foci} must be
smaller than \code{n_origins}.}

\item{foci_separation}{a value from \code{1} to \code{100}
indicating the nearness of focal points to one another.
A \code{0} separation indicates that focal points are in
close proximity
of one another, while a \code{100} indicates focal points being
evenly distributed across space.}

\item{conc_type}{concentration of the rest of the
origins (non-focal origins) around the focal ones. The options
are \code{"nucleated"} and \code{"dispersed"}.}

\item{p_ratio}{the smaller of the
two terms of proportional ratios.
For example, a value of \code{20}
implies \code{20:80} proportional ratios.}

\item{s_threshold}{defines the spatial
perception range of a walker at a given
location. Default: \code{250} (in the same
linear unit
as the \code{poly} - polygon shapefile).}

\item{step_length}{the maximum step taken
by a walker from one point to the next.}

\item{trend}{specifies the direction of the
long-term trend. Options are:
\code{"decreasing"}, \code{"stable"},
and \code{"increasing"}. Default value is: \code{"stable"}.}

\item{first_pDate}{date of the first seasonal peak of
the GTP (format: \code{"yyyy-mm-dd"}).
Default value is \code{NULL}, in which first seasonal
peak of 90 days is utilized.
seasonal cycle of 180 days is utilized (that is,
a seasonal cycle of 180 days).}

\item{slope}{slope of the long-term trend when
an \code{"increasing"} or \code{"decreasing"} trend is specified.
Options: \code{"gentle"} or \code{"steep"}. The default value is
set as \code{NULL} for the \code{stable} trend.}

\item{...}{additional arguments to pass from
\code{gtp}, \code{walker} and \code{artif_spo}
functions.}

\item{show.plot}{(logical) Shows GTP.
Default is \code{FALSE}.}

\item{show.data}{(TRUE or FALSE) To show the output
data. Default is \code{FALSE}.}
}
\value{
Returns a list of artificial spatiotemporal
point patterns.
}
\description{
Generates spatiotemporal
point patterns based on a set of
synthesized origins.
}
\details{
Generates spatiotemporal point pattern
based on the interactions between the
walkers (agents) and the landscape. Both the walkers
and the landscape are configured arbitrarily (in accordance
with the users knowledge of the domain under study.
This function is computationally intensive, and so
has been implemented to use parallel processing for
faster results. An \code{n}-1 cores on a PC is utilized
for the simulation. The argument \code{n_origin} has the
largest impacts on the computation. The computational time
is \code{15} minutes for the example above on a (4-1)
core laptop (with parameters setting: \code{n_origin=50} and
\code{restriction_feat = NULL}). The computational time
increases to 2hours when
\code{restriction_feat = landuse}). Note: the \code{n_events}
argument has little of no impacts on the
computational time.
}
\examples{
\dontrun{
require(rgdal)
path <- system.file("extdata", package="stppSim")
camden_boundary <- readOGR(dsn=path, layer = "camden_boundary", verbose=FALSE)
landuse <- system.file("extdata",
"landuse.rda", package="stppSim")
simulated_stpp <- psim_artif(n_events=200, start_date = "2021-01-01",
poly=camden_boundary, n_origin=50, restriction_feat = landuse,
field = "rValue1",
n_foci=5, foci_separation = 10, conc_type = "dispersed",
p_ratio = 20, s_threshold = 50, step_length = 20,
trend = "stable", first_pDate=NULL,
slope = NULL,show.plot=FALSE, show.data=FALSE)
#If `n_events` is a vector, access the corresponding
#simulated data for each vector entry using
#`simulated_stpp[[vector-index]]`
}
}
